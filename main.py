import telebot
from telebot import types
import logging

bot = telebot.TeleBot("5202477338:AAFFgxbKRs1Oh23TU7OxnbkWaLaxMpaUrJI")
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger("start")
logger.info("I am working now")
x = 0


@bot.message_handler(commands=["start"])
def start(message):
    if x == 0:
        buttons1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–¢–∞–∫, —è —Ö–æ—á—É –ø–æ—á–∞—Ç–∏ –ø—Ä—è–º–æ –∑–∞—Ä–∞–∑")
        btn2 = types.KeyboardButton("–¢–∞–∫, —è —Ö–æ—á—É, –∞–ª–µ –ø—ñ–∑–Ω—ñ—à–µ")
        btn3 = types.KeyboardButton("–í–æ–Ω–æ –º–µ–Ω—ñ –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–µ")
        buttons1.add(btn1, btn2, btn3)
        bot.send_message(message.chat.id, f"–ü—Ä–∏–≤—ñ—Ç, {message.from_user.full_name}. –Ø –º–æ–∂—É –í–∞–º –¥–æ–ø–æ–º–æ–≥—Ç–∏ –ø–æ—á–∞—Ç–∏"
                                          f" –≤–∏–≤—á–∞—Ç–∏ –±–∞–∑–æ–≤–∏–π Python.")
        bot.send_message(message.chat.id, "Python - —Ü–µ –º–æ–≤–∞ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —è–∫–æ—ó, –º–æ–∂–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞—Ç–∏ —Ä—ñ–∑–Ω—ñ"
                                          " –ø—Ä–æ–≥—Ä–∞–º–∏. –¶—è –º–æ–≤–∞ –¥—É–∂–µ –ª–µ–≥–∫–∞ —Ç–∞ –∑—Ä–æ–∑—É–º—ñ–ª–∞. –Ø–∫—â–æ –í–∏ —Ö–æ—á–µ—Ç–µ —Å–ø—Ä–æ–±—É–≤–∞—Ç–∏"
                                          " —Å–≤–æ—ó —Å–∏–ª–∏, —Ç–æ –º–æ–∂–µ—Ç–µ –ø–æ—á–∞—Ç–∏ –Ω–∞–≤—á–∞–Ω–Ω—è –ø—Ä—è–º–æ –∑–∞—Ä–∞–∑ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ!",
                         reply_markup=buttons1)
        bot.send_message(message.chat.id, "–Ø–∫—â–æ –í–∏ —Ö–æ—á–µ—Ç–µ –ø–æ—Å–ø—ñ–ª–∫—É–≤–∞—Ç–∏—Å—è –∑ –∞–≤—Ç–æ—Ä–æ–º —Ü—å–æ–≥–æ –±–æ—Ç–∞, —Ç–æ –ø–∏—à—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞,"
                                          " –Ω–∞ –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É –∞–¥—Ä–µ—Å—É: horenkomihailo2022@gmail.com")
    else:
        bot.delete_message(message.chat.id, message.id)


@bot.message_handler(content_types=["text"])
def answer(message):
    remove_keyboard = telebot.types.ReplyKeyboardRemove()
    buttons2 = telebot.types.InlineKeyboardMarkup(row_width=1)
    btn4 = telebot.types.InlineKeyboardButton(text='–Ø –ø–µ—Ä–µ–¥—É–º–∞–≤', callback_data="button4")
    btn5 = telebot.types.InlineKeyboardButton(text='–í—ñ–¥—Å—Ç–∞–Ω—å –≤—ñ–¥ –º–µ–Ω–µ!', callback_data="button5")
    buttons2.add(btn4, btn5)
    if x == 1:
        bot.delete_message(message.chat.id, message.id)
    else:
        if message.text == "–¢–∞–∫, —è —Ö–æ—á—É –ø–æ—á–∞—Ç–∏ –ø—Ä—è–º–æ –∑–∞—Ä–∞–∑":
            bot.send_message(message.chat.id, "–ì–∞—Ä–Ω–∏–π –≤–∏–±—ñ—Ä. –í–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è –¥–æ –∫–∞–Ω–∞–ª—É —É telegram. –û—Å—å"
                                              " –ø–æ—Å–∏–ª–∞–Ω–Ω—è‚¨áÔ∏è", reply_markup=remove_keyboard)
        if message.text == "–¢–∞–∫, —è —Ö–æ—á—É, –∞–ª–µ –ø—ñ–∑–Ω—ñ—à–µ":
            bot.send_message(message.chat.id, "–î–æ–±—Ä–µ, —Å–∫–æ—Ä–æ –∑—É—Å—Ç—Ä—ñ–Ω–µ–º–æ—Å—è! –ù–∞–ø–∏—à—ñ—Ç—å /start, –∫–æ–ª–∏ –∑–∞—Ö–æ—á–µ—Ç–µ —Ä–æ–∑–ø–æ—á–∞—Ç–∏"
                                              " –ø–µ—Ä—à–∏–π —É—Ä–æ–∫.", reply_markup=remove_keyboard)
        if message.text == "–í–æ–Ω–æ –º–µ–Ω—ñ –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–µ":
            bot.send_message(message.chat.id, "–ï—Ö, –∂–∞–ª—å, –∞ —è —Ç–∞–∫ —Ö–æ—Ç—ñ–≤ –∑ —Ç–æ–±–æ—é –ø–æ–ø—Ä–æ–≥—Ä–∞–º—É–≤–∞—Ç–∏... –Ø–∫—â–æ –ø–µ—Ä–µ–¥—É–º–∞—î—Ç–µ"
                                              " –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ", reply_markup=remove_keyboard)
            bot.send_message(message.chat.id, "–Ø–∫—â–æ –ø–µ—Ä–µ–¥—É–º–∞—î—Ç–µ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ‚¨á ", reply_markup=buttons2)


@bot.callback_query_handler(func=lambda c: c.data == 'button4')
def process_callback_button1(callback_query: types.CallbackQuery):
    bot.answer_callback_query(callback_query.id)
    bot.send_message(callback_query.from_user.id, '–£—Ä–∞! –Ø —Ç–∞–∫ —Ä–∞–¥ –∑–∞ —Ç–µ–±–µ! –¢–µ–ø–µ—Ä —Ç–∏ –º–æ–∂–µ—à –∑–º—ñ–Ω–∏—Ç–∏ —Å–≤—ñ–π –≤–∏–±—ñ—ÄüòÉ, –¥–ª—è '
                                                  '—Ü—å–æ–≥–æ —Ç–æ–±—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç–∏ /start')


@bot.callback_query_handler(func=lambda c: c.data == 'button5')
def process_callback_button1(callback_query: types.CallbackQuery):
    bot.answer_callback_query(callback_query.id)
    bot.send_message(callback_query.from_user.id, '–ü–æ–∫–∞, —è –¥–æ–±–∞–≤–ª—è—é —Ç–µ–±–µ –≤ —á–æ—Ä–Ω–∏–π —Å–ø–∏—Å–æ–∫!')
    global x
    x = 1


bot.polling(none_stop=True)

if StopIteration:
    logger = logging.getLogger("stop")
    logger.info("I am not working now")